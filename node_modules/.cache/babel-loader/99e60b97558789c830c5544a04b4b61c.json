{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"/* add css styles here (optional) */\\n\\n.styles_react-code-input-container__tpiKG {\\n  position: relative;\\n}\\n\\n.styles_react-code-input__CRulA > input {\\n  border: solid 1px #a8adb7;\\n  border-right: none;\\n  font-family: 'Lato';\\n  font-size: 20px;\\n  color: #525461;\\n  text-align: center;\\n  box-sizing: border-box;\\n  border-radius: 0;\\n  -webkit-appearance: initial;\\n}\\n\\n.styles_react-code-input__CRulA > input:last-child {\\n  border-right: solid 1px #a8adb7;\\n  border-top-right-radius: 6px;\\n  border-bottom-right-radius: 6px;\\n}\\n\\n.styles_react-code-input__CRulA > input:first-child {\\n  border-top-left-radius: 6px;\\n  border-bottom-left-radius: 6px;\\n}\\n\\n.styles_react-code-input__CRulA > input:focus {\\n  outline: none;\\n  border: 1px solid #006fff;\\n  caret-color: #006fff;\\n}\\n\\n.styles_react-code-input__CRulA > input:focus + input {\\n  border-left: none;\\n}\\n\\n.styles_loading__Z65VQ {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  text-align: center;\\n}\\n\\n.styles_blur__19vMK {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #fff;\\n  opacity: 0.5;\\n  filter: blur(0.5px);\\n  transition: opacity 0.3s;\\n}\\n\\n.styles_title__1cca0 {\\n  margin: 0;\\n  height: 20px;\\n  padding-bottom: 10px;\\n}\\n\\n.styles_spin__6y_8G {\\n  display: inline-block;\\n  animation: styles_loadingCircle__293ky 1s infinite linear;\\n}\\n\\n@keyframes styles_loadingCircle__293ky {\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n\";\nvar styles = {\n  \"react-code-input-container\": \"styles_react-code-input-container__tpiKG\",\n  \"react-code-input\": \"styles_react-code-input__CRulA\",\n  \"loading\": \"styles_loading__Z65VQ\",\n  \"blur\": \"styles_blur__19vMK\",\n  \"title\": \"styles_title__1cca0\",\n  \"spin\": \"styles_spin__6y_8G\",\n  \"loadingCircle\": \"styles_loadingCircle__293ky\"\n};\nstyleInject(css);\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar KEY_CODE = {\n  backspace: 8,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40\n};\n\nvar ReactCodeInput = function (_Component) {\n  inherits(ReactCodeInput, _Component);\n\n  function ReactCodeInput(props) {\n    classCallCheck(this, ReactCodeInput);\n\n    var _this = possibleConstructorReturn(this, (ReactCodeInput.__proto__ || Object.getPrototypeOf(ReactCodeInput)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var fields = props.fields,\n        values = props.values;\n    var vals = void 0;\n    var autoFocusIndex = 0;\n\n    if (values && values.length) {\n      vals = [];\n\n      for (var i = 0; i < fields; i++) {\n        vals.push(values[i] || '');\n      }\n\n      autoFocusIndex = values.length >= fields ? 0 : values.length;\n    } else {\n      vals = Array(fields).fill('');\n    }\n\n    _this.state = {\n      values: vals,\n      autoFocusIndex: autoFocusIndex\n    };\n    _this.iRefs = [];\n\n    for (var _i = 0; _i < fields; _i++) {\n      _this.iRefs.push(React.createRef());\n    }\n\n    _this.id = +new Date(); // this.handleKeys = Array(fields).fill(false);\n\n    return _this;\n  }\n  /**\n   * Clear all field value & focus first field\n   */\n  // onKeyUp = e => {\n  //   const index = parseInt(e.target.dataset.id);\n  //   if (this.handleKeys[index]) {\n  //     this.handleKeys[index] = false;\n  //     const next = this.iRefs[index + 1];\n  //     if (next) {\n  //       next.current.focus();\n  //     }\n  //   }\n  // };\n\n\n  createClass(ReactCodeInput, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _state = this.state,\n          values = _state.values,\n          autoFocusIndex = _state.autoFocusIndex;\n      var _props = this.props,\n          loading = _props.loading,\n          title = _props.title,\n          fieldHeight = _props.fieldHeight,\n          fieldWidth = _props.fieldWidth,\n          fields = _props.fields,\n          autoFocus = _props.autoFocus,\n          className = _props.className,\n          type = _props.type;\n      var INPUT_STYLE = {\n        width: fieldWidth,\n        height: fieldHeight\n      };\n      var ROOT_STYLE = {\n        width: fields * fieldWidth\n      };\n      var LOADING_STYLE = {\n        lineHeight: fieldHeight + 'px'\n      };\n      return React.createElement('div', {\n        className: styles['react-code-input-container'] + ' ' + className,\n        style: ROOT_STYLE\n      }, title && React.createElement('p', {\n        className: styles['title']\n      }, title), React.createElement('div', {\n        className: styles['react-code-input']\n      }, values.map(function (value, index) {\n        return React.createElement('input', {\n          type: type === 'number' ? 'tel' : type,\n          pattern: type === 'number' ? '[0-9]*' : null,\n          autoFocus: autoFocus && index === autoFocusIndex,\n          style: INPUT_STYLE,\n          key: _this2.id + '-' + index,\n          'data-id': index,\n          value: value,\n          id: _this2.props.id ? _this2.props.id + '-' + index : null,\n          ref: _this2.iRefs[index],\n          onChange: _this2.onChange,\n          onKeyDown: _this2.onKeyDown // onKeyUp={this.onKeyUp}\n          ,\n          onFocus: _this2.onFocus,\n          disabled: _this2.props.disabled,\n          required: _this2.props.required,\n          placeholder: _this2.props.placeholder[index]\n        });\n      })), loading && React.createElement('div', {\n        className: styles['loading'],\n        style: LOADING_STYLE\n      }, React.createElement('div', {\n        className: styles['blur']\n      }), React.createElement('svg', {\n        className: styles['spin'],\n        viewBox: '0 0 1024 1024',\n        'data-icon': 'loading',\n        width: '1em',\n        height: '1em',\n        fill: 'currentColor',\n        'aria-hidden': 'true'\n      }, React.createElement('path', {\n        fill: '#006fff',\n        d: 'M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z'\n      }))));\n    }\n  }]);\n  return ReactCodeInput;\n}(Component);\n\nReactCodeInput.propTypes = {\n  type: PropTypes.oneOf(['text', 'number']),\n  onChange: PropTypes.func,\n  onComplete: PropTypes.func,\n  fields: PropTypes.number,\n  loading: PropTypes.bool,\n  title: PropTypes.string,\n  fieldWidth: PropTypes.number,\n  id: PropTypes.string,\n  fieldHeight: PropTypes.number,\n  autoFocus: PropTypes.bool,\n  className: PropTypes.string,\n  values: PropTypes.arrayOf(PropTypes.string),\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  placeholder: PropTypes.arrayOf(PropTypes.string)\n};\nReactCodeInput.defaultProps = {\n  type: 'number',\n  fields: 6,\n  fieldWidth: 58,\n  fieldHeight: 54,\n  autoFocus: true,\n  disabled: false,\n  required: false,\n  placeholder: []\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.__clearvalues__ = function () {\n    var fields = _this3.props.fields;\n\n    _this3.setState({\n      values: Array(fields).fill('')\n    });\n\n    _this3.iRefs[0].current.focus();\n  };\n\n  this.triggerChange = function () {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this3.state.values;\n    var _props2 = _this3.props,\n        onChange = _props2.onChange,\n        onComplete = _props2.onComplete,\n        fields = _props2.fields;\n    var val = values.join('');\n    onChange && onChange(val);\n\n    if (onComplete && val.length >= fields) {\n      onComplete(val);\n    }\n  };\n\n  this.onChange = function (e) {\n    var index = parseInt(e.target.dataset.id);\n\n    if (_this3.props.type === 'number') {\n      e.target.value = e.target.value.replace(/[^\\d]/gi, '');\n    } // this.handleKeys[index] = false;\n\n\n    if (e.target.value === '' || _this3.props.type === 'number' && !e.target.validity.valid) {\n      return;\n    }\n\n    var fields = _this3.props.fields;\n    var next = void 0;\n    var value = e.target.value;\n    var values = _this3.state.values;\n    values = Object.assign([], values);\n\n    if (value.length > 1) {\n      var nextIndex = value.length + index - 1;\n\n      if (nextIndex >= fields) {\n        nextIndex = fields - 1;\n      }\n\n      next = _this3.iRefs[nextIndex];\n      var split = value.split('');\n      split.forEach(function (item, i) {\n        var cursor = index + i;\n\n        if (cursor < fields) {\n          values[cursor] = item;\n        }\n      });\n\n      _this3.setState({\n        values: values\n      });\n    } else {\n      next = _this3.iRefs[index + 1];\n      values[index] = value;\n\n      _this3.setState({\n        values: values\n      });\n    }\n\n    if (next) {\n      next.current.focus();\n      next.current.select();\n    }\n\n    _this3.triggerChange(values);\n  };\n\n  this.onKeyDown = function (e) {\n    var index = parseInt(e.target.dataset.id);\n    var prevIndex = index - 1;\n    var nextIndex = index + 1;\n    var prev = _this3.iRefs[prevIndex];\n    var next = _this3.iRefs[nextIndex];\n\n    switch (e.keyCode) {\n      case KEY_CODE.backspace:\n        e.preventDefault();\n        var vals = [].concat(toConsumableArray(_this3.state.values));\n\n        if (_this3.state.values[index]) {\n          vals[index] = '';\n\n          _this3.setState({\n            values: vals\n          });\n\n          _this3.triggerChange(vals);\n        } else if (prev) {\n          vals[prevIndex] = '';\n          prev.current.focus();\n\n          _this3.setState({\n            values: vals\n          });\n\n          _this3.triggerChange(vals);\n        }\n\n        break;\n\n      case KEY_CODE.left:\n        e.preventDefault();\n\n        if (prev) {\n          prev.current.focus();\n        }\n\n        break;\n\n      case KEY_CODE.right:\n        e.preventDefault();\n\n        if (next) {\n          next.current.focus();\n        }\n\n        break;\n\n      case KEY_CODE.up:\n      case KEY_CODE.down:\n        e.preventDefault();\n        break;\n\n      default:\n        // this.handleKeys[index] = true;\n        break;\n    }\n  };\n\n  this.onFocus = function (e) {\n    e.target.select(e);\n  };\n};\n\nexport default ReactCodeInput;","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"names":["KEY_CODE","ReactCodeInput","Component","propTypes","PropTypes","defaultProps","fields","values","props","vals","autoFocusIndex","i","Array","React","__clearvalues__","triggerChange","onChange","onComplete","val","index","parseInt","e","next","value","Object","nextIndex","split","cursor","onKeyDown","prevIndex","prev","onFocus","loading","title","fieldHeight","fieldWidth","autoFocus","className","type","INPUT_STYLE","ROOT_STYLE","LOADING_STYLE","styles"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.css';\n\nconst KEY_CODE = {\n  backspace: 8,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40\n};\n\nexport default class ReactCodeInput extends Component {\n  static propTypes = {\n    type: PropTypes.oneOf(['text', 'number']),\n    onChange: PropTypes.func,\n    onComplete: PropTypes.func,\n    fields: PropTypes.number,\n    loading: PropTypes.bool,\n    title: PropTypes.string,\n    fieldWidth: PropTypes.number,\n    id: PropTypes.string,\n    fieldHeight: PropTypes.number,\n    autoFocus: PropTypes.bool,\n    className: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.string),\n    disabled: PropTypes.bool,\n    required: PropTypes.bool,\n    placeholder: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    type: 'number',\n    fields: 6,\n    fieldWidth: 58,\n    fieldHeight: 54,\n    autoFocus: true,\n    disabled: false,\n    required: false,\n    placeholder: []\n  };\n\n  constructor(props) {\n    super(props);\n    const { fields, values } = props;\n    let vals;\n    let autoFocusIndex = 0;\n    if (values && values.length) {\n      vals = [];\n      for (let i = 0; i < fields; i++) {\n        vals.push(values[i] || '');\n      }\n      autoFocusIndex = values.length >= fields ? 0 : values.length;\n    } else {\n      vals = Array(fields).fill('');\n    }\n    this.state = { values: vals, autoFocusIndex };\n\n    this.iRefs = [];\n    for (let i = 0; i < fields; i++) {\n      this.iRefs.push(React.createRef());\n    }\n    this.id = +new Date();\n\n    // this.handleKeys = Array(fields).fill(false);\n  }\n\n  /**\n   * Clear all field value & focus first field\n   */\n  __clearvalues__ = () => {\n    const { fields } = this.props;\n    this.setState({ values: Array(fields).fill('') });\n    this.iRefs[0].current.focus();\n  };\n\n  triggerChange = (values = this.state.values) => {\n    const { onChange, onComplete, fields } = this.props;\n    const val = values.join('');\n    onChange && onChange(val);\n    if (onComplete && val.length >= fields) {\n      onComplete(val);\n    }\n  };\n\n  onChange = e => {\n    const index = parseInt(e.target.dataset.id);\n    if (this.props.type === 'number') {\n      e.target.value = e.target.value.replace(/[^\\d]/gi, '');\n    }\n    // this.handleKeys[index] = false;\n    if (\n      e.target.value === '' ||\n      (this.props.type === 'number' && !e.target.validity.valid)\n    ) {\n      return;\n    }\n    const { fields } = this.props;\n    let next;\n    const value = e.target.value;\n    let { values } = this.state;\n    values = Object.assign([], values);\n    if (value.length > 1) {\n      let nextIndex = value.length + index - 1;\n      if (nextIndex >= fields) {\n        nextIndex = fields - 1;\n      }\n      next = this.iRefs[nextIndex];\n      const split = value.split('');\n      split.forEach((item, i) => {\n        const cursor = index + i;\n        if (cursor < fields) {\n          values[cursor] = item;\n        }\n      });\n      this.setState({ values });\n    } else {\n      next = this.iRefs[index + 1];\n      values[index] = value;\n      this.setState({ values });\n    }\n\n    if (next) {\n      next.current.focus();\n      next.current.select();\n    }\n\n    this.triggerChange(values);\n  };\n\n  onKeyDown = e => {\n    const index = parseInt(e.target.dataset.id);\n    const prevIndex = index - 1;\n    const nextIndex = index + 1;\n    const prev = this.iRefs[prevIndex];\n    const next = this.iRefs[nextIndex];\n    switch (e.keyCode) {\n      case KEY_CODE.backspace:\n        e.preventDefault();\n        const vals = [...this.state.values];\n        if (this.state.values[index]) {\n          vals[index] = '';\n          this.setState({ values: vals });\n          this.triggerChange(vals);\n        } else if (prev) {\n          vals[prevIndex] = '';\n          prev.current.focus();\n          this.setState({ values: vals });\n          this.triggerChange(vals);\n        }\n        break;\n      case KEY_CODE.left:\n        e.preventDefault();\n        if (prev) {\n          prev.current.focus();\n        }\n        break;\n      case KEY_CODE.right:\n        e.preventDefault();\n        if (next) {\n          next.current.focus();\n        }\n        break;\n      case KEY_CODE.up:\n      case KEY_CODE.down:\n        e.preventDefault();\n        break;\n      default:\n        // this.handleKeys[index] = true;\n        break;\n    }\n  };\n\n  // onKeyUp = e => {\n  //   const index = parseInt(e.target.dataset.id);\n  //   if (this.handleKeys[index]) {\n  //     this.handleKeys[index] = false;\n  //     const next = this.iRefs[index + 1];\n  //     if (next) {\n  //       next.current.focus();\n  //     }\n  //   }\n  // };\n\n  onFocus = e => {\n    e.target.select(e);\n  };\n\n  render() {\n    const { values, autoFocusIndex } = this.state;\n    const {\n      loading,\n      title,\n      fieldHeight,\n      fieldWidth,\n      fields,\n      autoFocus,\n      className,\n      type\n    } = this.props;\n    const INPUT_STYLE = {\n      width: fieldWidth,\n      height: fieldHeight\n    };\n    const ROOT_STYLE = {\n      width: fields * fieldWidth\n    };\n    const LOADING_STYLE = {\n      lineHeight: `${fieldHeight}px`\n    };\n    return (\n      <div\n        className={`${styles['react-code-input-container']} ${className}`}\n        style={ROOT_STYLE}\n      >\n        {title && <p className={styles['title']}>{title}</p>}\n        <div className={styles['react-code-input']}>\n          {values.map((value, index) => (\n            <input\n              type={type === 'number' ? 'tel' : type}\n              pattern={type === 'number' ? '[0-9]*' : null}\n              autoFocus={autoFocus && index === autoFocusIndex}\n              style={INPUT_STYLE}\n              key={`${this.id}-${index}`}\n              data-id={index}\n              value={value}\n              id={this.props.id ? `${this.props.id}-${index}` : null}\n              ref={this.iRefs[index]}\n              onChange={this.onChange}\n              onKeyDown={this.onKeyDown}\n              // onKeyUp={this.onKeyUp}\n              onFocus={this.onFocus}\n              disabled={this.props.disabled}\n              required={this.props.required}\n              placeholder={this.props.placeholder[index]}\n            />\n          ))}\n        </div>\n        {loading && (\n          <div className={styles['loading']} style={LOADING_STYLE}>\n            <div className={styles['blur']} />\n            <svg\n              className={styles['spin']}\n              viewBox=\"0 0 1024 1024\"\n              data-icon=\"loading\"\n              width=\"1em\"\n              height=\"1em\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fill=\"#006fff\"\n                d=\"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\"\n              />\n            </svg>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}